generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

enum UserRole {
  ADMIN
  SUPER_ADMIN
}

model User {
  id        String   @id @default(cuid())
  username  String   @unique
  email     String   @unique
  password  String
  name      String?
  role      UserRole @default(ADMIN)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Trip {
  id           String      @id @default(cuid())
  title        String      @unique
  metadata     String?
  description  String
  images       Json
  location_from String
  location_to  String
  days         Int
  price        Float
  from_date    Date        // Only date (no time)
  to_date      Date        // Only date (no time)
  display      Boolean     @default(false)
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
  timeline     TripTimeline[]
  featured     Featured[]
}

model TripTimeline {
  id          String   @id @default(cuid())
  tripId      String
  title       String
  description String
  image       String?
  date        Date     // Only date (no time)
  sortOrder   Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  trip        Trip     @relation(fields: [tripId], references: [id], onDelete: Cascade)
}

model Featured {
  id        String   @id @default(cuid())
  tripId    String
  image     String
  cta       String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  trip      Trip     @relation(fields: [tripId], references: [id], onDelete: Cascade)
}